{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jose/Desktop/Pokedex/client/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport Stats from '../stats/Stats';\nimport Evolution from '../evolution/Evolution';\nimport Loading from '../../resources/pokeball-loading.gif';\n\nconst Profile = () => {\n  _s();\n\n  const [pokemonInfo, setPokemonInfo] = useState(null);\n  const url = window.location.pathname.split('/');\n  const id = url[url.length - 1];\n\n  const fetchPokemonDetails = () => {\n    fetch(`http://localhost:8080/pokemonDetails/${id}`).then(async res => {\n      const content = await res.json();\n      setPokemonInfo(content);\n    });\n  };\n\n  useEffect(() => fetchPokemonDetails(), []);\n\n  if (pokemonInfo === null) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"loading-screen\",\n      src: Loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(pokemonInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-chevron-circle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `profile-pic type-${pokemonInfo.types[0].type.name}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokemonInfo.sprites.other.dream_world.front_default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poke-bio\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pokemonInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"stats\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), pokemonInfo.types.map((type, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-${type.type.name}`,\n        children: type.type.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 54\n      }, this)), pokemonInfo.abilities.map((ability, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ability.ability.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 61\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/profile/stats\",\n      children: [\"className=\\\"stats-chart\\\"\", /*#__PURE__*/_jsxDEV(Stats, {\n        pokemonStats: pokemonInfo.stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"tSOJi+9mStB9K+bQmdnvvCv9q0k=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/jose/Desktop/Pokedex/client/src/components/profile/Profile.js"],"names":["React","useState","useEffect","Link","Route","Stats","Evolution","Loading","Profile","pokemonInfo","setPokemonInfo","url","window","location","pathname","split","id","length","fetchPokemonDetails","fetch","then","res","content","json","console","log","types","type","name","sprites","other","dream_world","front_default","map","i","abilities","ability","stats"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport Stats from '../stats/Stats';\nimport Evolution from '../evolution/Evolution';\n\nimport Loading from '../../resources/pokeball-loading.gif';\n\nconst Profile = () => {\n    const [pokemonInfo, setPokemonInfo] = useState(null);\n\n    const url = window.location.pathname.split('/');\n    const id = url[url.length - 1];\n\n    const fetchPokemonDetails = () => {\n        fetch(`http://localhost:8080/pokemonDetails/${id}`)\n            .then(async res => {\n                const content = await res.json();\n                setPokemonInfo(content);\n            })\n    }\n\n    useEffect(() => fetchPokemonDetails(), []);\n\n    if (pokemonInfo === null) {\n        return <img className=\"loading-screen\" src={Loading} />\n    }\n\n    console.log(pokemonInfo);\n\n    return (\n        <div className=\"profile\">\n            <Link to=\"/\">\n                <i className=\"fa fa-chevron-circle-left\"></i>\n            </Link>\n            <div className={`profile-pic type-${pokemonInfo.types[0].type.name}`}>\n                <img src={ pokemonInfo.sprites.other.dream_world.front_default } />\n            </div>\n            <div className=\"poke-bio\">\n                <h2>{ pokemonInfo.name }</h2>\n                <Link to=\"stats\">\n                    <button>Stats</button>\n                </Link>\n                { pokemonInfo.types.map((type, i) => <button key={i} className={`type-${type.type.name}`} >{ type.type.name }</button>) }\n                { pokemonInfo.abilities.map((ability, i) => <p key={i}>{ ability.ability.name }</p>) }\n            </div>\n            <Route path=\"/profile/stats\">\n            className=\"stats-chart\"\n                <Stats pokemonStats={pokemonInfo.stats} />\n            </Route>\n        </div>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}