{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jose/Desktop/Pokedex/client/src/components/stats/Stats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Chart from 'chart.js';\n\nconst Stats = ({\n  pokemonStats\n}) => {\n  _s();\n\n  console.log(pokemonStats);\n  const statsLabels = pokemonStats.map(pokemon => pokemon.stat.name);\n  const baseStats = pokemonStats.map(pokemon => pokemon.base_stat);\n  console.log(baseStats);\n  const chartRef = /*#__PURE__*/React.createRef();\n  let myChart;\n  useEffect(() => {\n    myChart = new Chart(chartRef.current, {\n      type: 'bar',\n      data: {\n        labels: statsLabels,\n        datasets: [{\n          data: baseStats,\n          backgroundColor: ['#ff9aa2', '#c7ceea', '#ffb7b2', '#e2f0cb', '#ffdac1', '#b5ead7']\n        }]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              suggestedMin: 0,\n              suggestedMax: 200\n            }\n          }]\n        },\n        fontFamily: 'Courier'\n      }\n    });\n  }, []);\n  console.log(statsLabels);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stats, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Stats;\nexport default Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/jose/Desktop/Pokedex/client/src/components/stats/Stats.js"],"names":["React","useEffect","Chart","Stats","pokemonStats","console","log","statsLabels","map","pokemon","stat","name","baseStats","base_stat","chartRef","createRef","myChart","current","type","data","labels","datasets","backgroundColor","options","legend","display","scales","yAxes","ticks","suggestedMin","suggestedMax","fontFamily"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,QAAMG,WAAW,GAAGH,YAAY,CAACI,GAAb,CAAiBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,IAAzC,CAApB;AACA,QAAMC,SAAS,GAAGR,YAAY,CAACI,GAAb,CAAiBC,OAAO,IAAIA,OAAO,CAACI,SAApC,CAAlB;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA,QAAME,QAAQ,gBAAGd,KAAK,CAACe,SAAN,EAAjB;AAEA,MAAIC,OAAJ;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,OAAO,GAAG,IAAId,KAAJ,CAAUY,QAAQ,CAACG,OAAnB,EAA4B;AAClCC,MAAAA,IAAI,EAAE,KAD4B;AAElCC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEb,WADN;AAEFc,QAAAA,QAAQ,EAAE,CAAC;AACPF,UAAAA,IAAI,EAAEP,SADC;AAEPU,UAAAA,eAAe,EAAE,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa;AAFV,SAAD;AAFR,OAF4B;AAgBlCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL,SADH;AAILC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHC,cAAAA,YAAY,EAAE,CADX;AAEHC,cAAAA,YAAY,EAAE;AAFX;AADH,WAAD;AADH,SAJH;AAYLC,QAAAA,UAAU,EAAE;AAZP;AAhByB,KAA5B,CAAV;AA+BH,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA1B,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,GAAG,EAAEO;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMH,CAlDD;;GAAMX,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Chart from 'chart.js';\n\nconst Stats = ({ pokemonStats }) => {\n    console.log(pokemonStats)\n    const statsLabels = pokemonStats.map(pokemon => pokemon.stat.name);\n    const baseStats = pokemonStats.map(pokemon => pokemon.base_stat);\n    console.log(baseStats)\n    const chartRef = React.createRef();\n\n    let myChart;\n\n    useEffect(() => {\n        myChart = new Chart(chartRef.current, {\n            type: 'bar', \n            data: {\n                labels: statsLabels,\n                datasets: [{\n                    data: baseStats, \n                    backgroundColor: [\n                        '#ff9aa2',\n                        '#c7ceea',\n                        '#ffb7b2',\n                        '#e2f0cb',\n                        '#ffdac1',\n                        '#b5ead7'\n                    ]\n                }]\n            },\n            options: {\n                legend: {\n                    display: false\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            suggestedMin: 0,\n                            suggestedMax: 200,\n                        }\n                    }],\n                },\n                fontFamily: 'Courier'\n            }\n        });\n    }, [])\n\n    console.log(statsLabels)\n    return (\n    <div>\n        <h3>Statistics</h3>\n        <canvas ref={chartRef} />\n    </div>\n    )\n}\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}