{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jose/Desktop/Pokedex/client/src/components/evolution/Evolution.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EvolutionStage from '../evolution-stage/EvolutionStage';\n\nconst Evolution = ({\n  species,\n  background\n}) => {\n  _s();\n\n  const [evolutionData, setEvolutionData] = useState(null);\n  let evolutionPhase = [species];\n\n  const fetchEvolution = () => {\n    const destructure = species.split('/');\n    const speciesID = destructure[destructure.length - 2];\n    fetch(`http://localhost:8080/pokemonEvolution/${speciesID}`).then(async res => {\n      const evolution = await res.json();\n      setEvolutionData(evolution.chain);\n    });\n  };\n\n  useEffect(() => fetchEvolution(), []);\n\n  if (evolutionData !== null) {\n    evolutionData.evolves_to.map(evolve => {\n      if (evolve.species) {\n        console.log(evolve.species);\n        evolutionPhase = [...evolutionPhase, evolve.species];\n      }\n\n      if (evolve.evolves_to.length > 0) {\n        console.log(evolve.evolves_to);\n        evolutionPhase = [...evolutionPhase, evolve.evolves_to[0].species];\n      }\n\n      return;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `evolution-chart ${background}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Evolution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), evolutionPhase.map((phase, i) => {\n      const urlSplit = phase.url.split('/');\n      const pokemonID = urlSplit[urlSplit.length - 2];\n      return /*#__PURE__*/_jsxDEV(EvolutionStage, {\n        pokemon: phase.name,\n        pokemonId: pokemonID\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Evolution, \"a6KjEYKxDXB7Amnl75q1smDyW1I=\");\n\n_c = Evolution;\nexport default Evolution;\n\nvar _c;\n\n$RefreshReg$(_c, \"Evolution\");","map":{"version":3,"sources":["/Users/jose/Desktop/Pokedex/client/src/components/evolution/Evolution.js"],"names":["React","useState","useEffect","EvolutionStage","Evolution","species","background","evolutionData","setEvolutionData","evolutionPhase","fetchEvolution","destructure","split","speciesID","length","fetch","then","res","evolution","json","chain","evolves_to","map","evolve","console","log","phase","i","urlSplit","url","pokemonID","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAAA;;AAC3C,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AACA,MAAIQ,cAAc,GAAG,CAACJ,OAAD,CAArB;;AAEA,QAAMK,cAAc,GAAG,MAAM;AACzB,UAAMC,WAAW,GAAGN,OAAO,CAACO,KAAR,CAAc,GAAd,CAApB;AACA,UAAMC,SAAS,GAAGF,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAqB,CAAtB,CAA7B;AAEAC,IAAAA,KAAK,CAAE,0CAAyCF,SAAU,EAArD,CAAL,CACKG,IADL,CACU,MAAMC,GAAN,IAAa;AACf,YAAMC,SAAS,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAxB;AACAX,MAAAA,gBAAgB,CAACU,SAAS,CAACE,KAAX,CAAhB;AACH,KAJL;AAKH,GATD;;AAWAlB,EAAAA,SAAS,CAAC,MAAMQ,cAAc,EAArB,EAAyB,EAAzB,CAAT;;AAEA,MAAIH,aAAa,KAAK,IAAtB,EAA4B;AACxBA,IAAAA,aAAa,CAACc,UAAd,CAAyBC,GAAzB,CAA6BC,MAAM,IAAI;AACnC,UAAIA,MAAM,CAAClB,OAAX,EAAoB;AAChBmB,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAClB,OAAnB;AACAI,QAAAA,cAAc,GAAG,CAAC,GAAGA,cAAJ,EAAoBc,MAAM,CAAClB,OAA3B,CAAjB;AACH;;AAED,UAAIkB,MAAM,CAACF,UAAP,CAAkBP,MAAlB,GAA2B,CAA/B,EAAkC;AAC9BU,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACF,UAAnB;AACAZ,QAAAA,cAAc,GAAG,CAAC,GAAGA,cAAJ,EAAoBc,MAAM,CAACF,UAAP,CAAkB,CAAlB,EAAqBhB,OAAzC,CAAjB;AACH;;AAED;AACH,KAZD;AAaH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,mBAAkBC,UAAW,EAA9C;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMG,cAAc,CAACa,GAAf,CAAmB,CAACI,KAAD,EAAQC,CAAR,KAAc;AAC/B,YAAMC,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUjB,KAAV,CAAgB,GAAhB,CAAjB;AACA,YAAMkB,SAAS,GAAGF,QAAQ,CAACA,QAAQ,CAACd,MAAT,GAAkB,CAAnB,CAA1B;AACA,0BAAO,QAAC,cAAD;AAAwB,QAAA,OAAO,EAAEY,KAAK,CAACK,IAAvC;AAA6C,QAAA,SAAS,EAAED;AAAxD,SAAqBH,CAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAJC,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3CD;;GAAMvB,S;;KAAAA,S;AA6CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport EvolutionStage from '../evolution-stage/EvolutionStage';\n\nconst Evolution = ({ species, background }) => {\n    const [evolutionData, setEvolutionData] = useState(null);\n    let evolutionPhase = [species];\n    \n    const fetchEvolution = () => {\n        const destructure = species.split('/');\n        const speciesID = destructure[destructure.length - 2];\n\n        fetch(`http://localhost:8080/pokemonEvolution/${speciesID}`)\n            .then(async res => {\n                const evolution = await res.json();\n                setEvolutionData(evolution.chain);\n            })\n    }\n\n    useEffect(() => fetchEvolution(), []);\n\n    if (evolutionData !== null) {\n        evolutionData.evolves_to.map(evolve => {\n            if (evolve.species) {\n                console.log(evolve.species)\n                evolutionPhase = [...evolutionPhase, evolve.species];\n            }\n\n            if (evolve.evolves_to.length > 0) {\n                console.log(evolve.evolves_to)\n                evolutionPhase = [...evolutionPhase, evolve.evolves_to[0].species];\n            }\n\n            return\n        })\n    }\n\n    return (\n        <div className={`evolution-chart ${background}`}>\n            <h3>Evolution</h3>\n            { evolutionPhase.map((phase, i) => {\n                const urlSplit = phase.url.split('/');\n                const pokemonID = urlSplit[urlSplit.length - 2];\n                return <EvolutionStage key={i} pokemon={phase.name} pokemonId={pokemonID} />\n            }) }\n        </div>\n    )\n}\n\nexport default Evolution;"]},"metadata":{},"sourceType":"module"}